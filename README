Creating Testable and Integrative Epigenetic models of Transcription

Prerequites:
R version >3.0 (Packages: data.table, plyr, reshape2, glmnet, preprocessCore, GenomicRanges) 
Python version >2.7 but not 3.0 

Current call:
python pipeline_top.py bigwigFeaturesFile
	hardcoded inputs:
			refgene_fname = "refGene.txt"
		  enhancerRangeFile = "sandelin_enh_expanded.bed"

# File input list format (tab-separated/tsv):
[patient/cell name] [assay type] [absolute file location]  [aggregation function]



# Model Output format:
	# Index	[ integer ]
	# Gene_name	[ string ]
	# Feature_chr [ chr# or chr ##]
	# Feature_start [ integer ]
	# Feature_end  [ integer ] 
	# Feature_pos_relative_to_gene  [ up,down,body ]
	# Feature_score [ float ]

# Software Requirements
#
# # Commands "ready to run" in a shell are prefixed with ####
# # sed -i -e 's/^####//g' THISFILE ; sh THISFILE
# # will remove those comments and make this runnable script
# # The Bioinformatics tool installs to /usr/local/ are *not* scripted.
#
#  Start with Ubuntu 12.04 “precise” AMI.
#
#  Create 1TB EBS volume, typically found as /dev/xvdf, attach to instance and mount as /epigenomics/
#### sudo mkdir -p /epigenomics && sudo mount /dev/xvdf /epigenomics
#
#  Create /epigenomics/teamdata group writeable for team_epigenomics
#
#### sudo mkdir -p /epigenomics/teamdata/ && sudo chgrp team_epigenomics /epigenomics/teamdata && sudo chmod g+rwxs /epigenomics/teamdata
#
#  # Standard developer tools
####  sudo apt-get install -y build-essentials python perl openjdk-7-jre emacs vim
#
#  Install R-3, requires CRAN mirror, not mainline Ubuntu
#  
####  echo deb http://watson.nci.nih.gov/cran_mirror/bin/linux/ubuntu precise/ | sudo tee /etc/apt/sources.list.d/R.list
####  gpg -a --export E084DAB9 | sudo apt-key add - && sudo apt-get update && sudo apt-get install r-core r-base
#
#  Make /usr/local/lib/R/site-library group-writeable so ordinary users can install packages, bioconductor, from R
#
#### sudo mkdir -p /usr/local/lib/R/site-library && sudo chgrp team_epigenomics /usr/local/lib/R/site-library && sudo chmod g+rwx /usr/local/lib/R/site-library
#
#  Packages that were installed during development:
#  AnnotationDbi/  BiocInstaller/  colorspace/  dplyr/          gtable/    locfit/       munsell/         RColorBrewer/  RSQLite/    stringr/
#  assertthat/     biomaRt/        data.table/  GenomeInfoDb/   IRanges/   magrittr/     plyr/            Rcpp/          rstudio/    XML/
#  BH/             bitops/         DBI/         GenomicRanges/  labeling/  manipulate/   preprocessCore/  RCurl/         S4Vectors/  XVector/
#  Biobase/        bsseq/          dichromat/   ggplot2/        lars/      matrixcalc/   proto/           reshape2/      scales/
#  BiocGenerics/   chron/          digest/      glmnet/         lazyeval/  matrixStats/  R6/              R.methodsS3/   sem/
#
## Packages required based on current code
## To grab a list of required R libraries
#  find . -name "*.[rR]" -exec grep -P '^\s*library' {} \; | sort | uniq | perl -ple 's/^.*\((.*?)\)/$1/'
## Do standard R packages
####  for i in data.table glmnet lars plyr reshape2 ; do sudo -g team_epigenomics R -e "install.packages('$i')" ; done
## Do BioConductor packages
####  for i in bsseq GenomicRanges preprocessCore ; do R -g team_epigenomics -e "source('http://bioconductor.org/biocLite.R') ; biocLite('$i')" ; done
#
#  # Additional packages
#
#  Undeclared dependency for one (MACS?) of the bioinformatics tools
####  sudo apt-get install -y libgsl0ldbl libgsl0-dev
#
#  Undeclared dependency to install biomaRt
####  sudo apt-get install libcurl4-nss-dev
#
#  Install bioinformatics software into /usr/local/[package]-[version]; symlink to /usr/local/[package]
#
#  /usr/local/bedtools2-2.22.1
#  https://github.com/arq5x/bedtools2/releases/download/v2.22.1/bedtools-2.22.1.tar.gz
#
#  /usr/local/bowtie2-2.2.4
#  http://sourceforge.net/projects/bowtie-bio/files/bowtie2/2.2.4/bowtie2-2.2.4-source.zip/download
#
#  /usr/local/MACS-1.4.2-1.tar.gz
#  https://github.com/downloads/taoliu/MACS/MACS-1.4.2-1.tar.gz
#
#  /usr/local/samtools-1.1
#  http://sourceforge.net/projects/samtools/files/samtools/1.1/
#
#  /usr/local/STAR-master
#  https://github.com/alexdobin/STAR/archive/master.zip
#
#  /usr/local/ucsc_tools
#  http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/
#
#  /usr/local/wiggletools
#  https://github.com/Ensembl/WiggleTools/releases/download/v1.0/wiggletools_x86_64_linux
#
#  # Create /etc/profile.d/Z98biotools.sh to include those directories in PATH
#### cat -> /etc/profile.d/Z98biotools.sh <<END
#### #!/bin/sh
#### for i in wiggletools bedtools2 ucsc_tools MACS/bin/ samtools/usr/local/bin bowtie2 bismark STAR/bin/Linux_x86_64 
####    do export PATH="/usr/local/$i:$PATH" 
#### done
####END
#### sudo chmod a+x /etc/profile.d/Z98biotools
#
#   #   Set umask to 002 to help group collaboration - in English, this means that by default files are created as user read/write/execute, group read/write/execute, other read/execute; or mode 775.
#   #   /etc/login.defs; UMASK 002
#   #   alt. /etc/profile; umask 002
#### sed -i -e 's/^UMASK 022/UMASK 002/g /etc/login.defs
#
#   #  _IF_ we’re using Spark
# curl http://archive.cloudera.com/cdh5/ubuntu/precise/amd64//cdh/archive.key | sudo apt-key add -
# sudo curl -o /etc/apt/sources.list.d/cloudera.list http://archive.cloudera.com/cdh5/ubuntu/precise/amd64//cdh//cloudera.list
# sudo apt-get update
# sudo apt-get install spark-core spark-master spark-worker spark-history-server spark-python
# #     NB: spark-history-server fails to start because the HDFS setup is incomplete. For a standalone simple server, this is fine
# #     Start spark with python or the scala shell
# #     pyspark
# #     spark-shell
